{"version":3,"sources":["webpack:///./task-1.js","webpack:///./task-2.js","webpack:///./task-3.js"],"names":["delay","ms","Promise","resolve","time","setTimeout","logger","console","log","then","users","name","active","toggleUserState","allUsers","userName","reject","map","user","updatedUsers","table","makeTransaction","transaction","min","max","Math","floor","random","id","logSuccess","logError","warn","amount","catch"],"mappings":"2JAAaA,EAAQ,SAAAC,GAEjB,OAAO,IAAIC,SAAQ,SAACC,GAChB,IAAMC,EAAOH,EACbI,YAAW,WACPF,EAAQC,KACVH,OAIJK,EAAS,SAAAF,GAAI,OAAIG,QAAQC,IAAR,kBAA8BJ,EAA9B,OAIrBJ,EAAM,KAAMS,KAAKH,GACjBN,EAAM,KAAMS,KAAKH,GACjBN,EAAM,MAAMS,KAAKH,G,kCChBNI,EAAQ,CACjB,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGdC,EAAkB,SAACC,EAAUC,GACtC,OAAO,IAAIb,SAAQ,SAACC,EAASa,GAIzBb,EAHqBW,EAASG,KAAI,SAAAC,GAAI,OAClCA,EAAKP,OAASI,EAAd,iBAA8BG,EAA9B,CAAoCN,QAASM,EAAKN,SAAWM,UAKnEZ,EAAS,SAAAa,GAAY,OAAIZ,QAAQa,MAAMD,IAG7CN,EAAgBH,EAAO,SAASD,KAAKH,GACrCO,EAAgBH,EAAO,OAAOD,KAAKH,GCnB5B,IAIMe,EAAkB,SAACC,GAC9B,IALwCC,EAAKC,EAKvCxB,GALkCuB,EAKA,IALKC,EAKA,IAJtCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAMpD,OAAO,IAAIrB,SAAQ,SAACC,EAASa,GAE3BX,YAAW,WACUoB,KAAKE,SAAW,GAGjCxB,EAAQ,CAACyB,GAAIN,EAAYM,GAAIxB,KAAMJ,IAEnCgB,EAAO,CAACY,GAAIN,EAAYM,OAEzB5B,OAIM6B,EAAa,SAAC,GAAe,IAAdD,EAAc,EAAdA,GAAIxB,EAAU,EAAVA,KAC9BG,QAAQC,IAAR,eAA2BoB,EAA3B,iBAA8CxB,EAA9C,OAGW0B,EAAW,SAAC,GAAS,IAARF,EAAQ,EAARA,GACxBrB,QAAQwB,KAAR,gCAA6CH,EAA7C,8BAIFP,EAAgB,CAAEO,GAAI,GAAII,OAAQ,MAC/BvB,KAAKoB,GACLI,MAAMH,GAETT,EAAgB,CAAEO,GAAI,GAAII,OAAQ,MAC/BvB,KAAKoB,GACLI,MAAMH,GAETT,EAAgB,CAAEO,GAAI,GAAII,OAAQ,KAC/BvB,KAAKoB,GACLI,MAAMH,GAETT,EAAgB,CAAEO,GAAI,GAAII,OAAQ,MAC/BvB,KAAKoB,GACLI,MAAMH,K","file":"main.4f31ea4598aacfa5547f.js","sourcesContent":["export const delay = ms => {\r\n    \r\n    return new Promise((resolve) => {\r\n        const time = ms\r\n        setTimeout(() => {\r\n            resolve(time)\r\n        },ms)\r\n    })\r\n\r\n  };\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n  \r\n  \r\n  // Вызовы функции для проверки\r\n  delay(2000).then(logger); // Resolved after 2000ms\r\n  delay(1000).then(logger); // Resolved after 1000ms\r\n  delay(1500).then(logger); // Resolved after 1500ms","export const users = [\r\n    { name: 'Mango', active: true },\r\n    { name: 'Poly', active: false },\r\n    { name: 'Ajax', active: true },\r\n    { name: 'Lux', active: false },\r\n];\r\n\r\nexport const toggleUserState = (allUsers, userName) => {\r\n    return new Promise((resolve, reject) => {\r\n        const updatedUsers = allUsers.map(user =>\r\n            user.name === userName ? { ...user, active: !user.active } : user);\r\n\r\n        resolve(updatedUsers)\r\n    })\r\n};\r\nconst logger = updatedUsers => console.table(updatedUsers);\r\n\r\n\r\ntoggleUserState(users, 'Mango').then(logger);\r\ntoggleUserState(users, 'Lux').then(logger);","export const randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const makeTransaction = (transaction) => {\r\n  const delay = randomIntegerFromInterval(200, 500);\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n\r\n      if (canProcess) {\r\n        resolve({id: transaction.id, time: delay});\r\n      } else {\r\n        reject({id: transaction.id});\r\n      }\r\n    }, delay);\r\n  })\r\n};\r\n\r\nexport const logSuccess = ({id, time}) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nexport const logError = ({id}) => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n\r\nmakeTransaction({ id: 70, amount: 150 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 })\r\n  .then(logSuccess)\r\n  .catch(logError);"],"sourceRoot":""}